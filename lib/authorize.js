// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var AuthorizeClient, Base, Config, SessionClient, Thread, UserSet, iced, idg, log, make_esc, __iced_k, __iced_k_noop, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  SessionClient = require('./session').SessionClient;

  make_esc = require('iced-error').make_esc;

  Base = require('./base').Base;

  Config = require('./config').Config;

  _ref = require('./data'), UserSet = _ref.UserSet, Thread = _ref.Thread;

  log = require('iced-logger');

  idg = require('keybase-messenger-core').id.generators;

  exports.AuthorizeClient = AuthorizeClient = (function(_super) {
    __extends(AuthorizeClient, _super);

    function AuthorizeClient(_arg) {
      var cfg;
      cfg = _arg.cfg, this.id = _arg.id, this.tmp_key_generator = _arg.tmp_key_generator, this.me = _arg.me;
      AuthorizeClient.__super__.constructor.call(this, {
        cfg: cfg
      });
    }

    AuthorizeClient.prototype.authorize = function(cb) {
      var err, km, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase/messenger-client/src/authorize.iced",
            funcname: "AuthorizeClient.authorize"
          });
          _this.tmp_key_generator(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                err = arguments[0];
                return km = arguments[1];
              };
            })(),
            lineno: 21
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          return cb(null);
        };
      })(this));
    };

    return AuthorizeClient;

  })(Base);

}).call(this);
