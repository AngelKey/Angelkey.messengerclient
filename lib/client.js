// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var Base, Client, SessionClient, iced, make_esc, __iced_k, __iced_k_noop,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  SessionClient = require('./session').SessionClient;

  make_esc = require('iced-error').make_esc;

  Base = require('./base').Base;

  exports.Client = Client = (function(_super) {
    __extends(Client, _super);

    function Client(_arg) {
      var cfg;
      cfg = _arg.cfg;
      Client.__super__.constructor.call(this, {
        cfg: cfg
      });
    }

    Client.prototype.init_thread = function(_arg, cb) {
      var args, esc, msg, scli, session_id, thread, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      thread = _arg.thread;
      esc = make_esc(cb, "Client::init_thread");
      scli = new SessionClient({
        cfg: this.cfg
      });
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/client.iced",
            funcname: "Client.init_thread"
          });
          scli.establish_session(esc(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return session_id = arguments[0];
              };
            })(),
            lineno: 21
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/client.iced",
              funcname: "Client.init_thread"
            });
            thread.gen_init_msg(esc(__iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return msg = arguments[0];
                };
              })(),
              lineno: 22
            })));
            __iced_deferrals._fulfill();
          })(function() {
            msg.session_id = session_id;
            args = {
              endpoint: "thread/init",
              method: "POST",
              data: msg
            };
            (function(__iced_k) {
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "/home/max/src/keybase/messenger-client/src/client.iced",
                funcname: "Client.init_thread"
              });
              _this.request(args, esc(__iced_deferrals.defer({
                lineno: 30
              })));
              __iced_deferrals._fulfill();
            })(function() {
              return cb(null);
            });
          });
        };
      })(this));
    };

    return Client;

  })(Base);

}).call(this);
