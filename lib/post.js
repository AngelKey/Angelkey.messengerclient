// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var Base, C, Config, KeyManager, PostMessageClient, SessionClient, Thread, UserSet, burn, iced, idg, kbmc, log, make_esc, pack, unix_time, __iced_k, __iced_k_noop, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  SessionClient = require('./session').SessionClient;

  make_esc = require('iced-error').make_esc;

  Base = require('./base').Base;

  Config = require('./config').Config;

  _ref = require('./data'), UserSet = _ref.UserSet, Thread = _ref.Thread;

  log = require('iced-logger');

  kbmc = require('keybase-messenger-core');

  idg = kbmc.id.generators;

  C = kbmc["const"];

  _ref1 = require('kbpgp'), burn = _ref1.burn, KeyManager = _ref1.KeyManager;

  unix_time = require('iced-utils').util.unix_time;

  pack = require('purepack').pack;

  exports.PostMessageClient = PostMessageClient = (function(_super) {
    __extends(PostMessageClient, _super);

    function PostMessageClient(_arg) {
      var cfg;
      cfg = _arg.cfg, this.thread = _arg.thread, this.from = _arg.from, this.km = _arg.km, this.msg = _arg.msg, this.mime_type = _arg.mime_type;
      PostMessageClient.__super__.constructor.call(this, {
        cfg: cfg
      });
      this.mime_type || (this.mime_type = "text/kstm");
    }

    PostMessageClient.prototype.post = function(arg, cb) {
      var esc, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      log.debug("+ PostMessageClient::authenticate");
      esc = make_esc(cb, "PostMessageClient::authenticate");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/post.iced",
            funcname: "PostMessageClient.post"
          });
          _this.sign(esc(__iced_deferrals.defer({
            lineno: 28
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/post.iced",
              funcname: "PostMessageClient.post"
            });
            _this.chunkify(esc(__iced_deferrals.defer({
              lineno: 29
            })));
            __iced_deferrals._fulfill();
          })(function() {
            (function(__iced_k) {
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "/home/max/src/keybase/messenger-client/src/post.iced",
                funcname: "PostMessageClient.post"
              });
              _this.post_header(esc(__iced_deferrals.defer({
                lineno: 30
              })));
              __iced_deferrals._fulfill();
            })(function() {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "/home/max/src/keybase/messenger-client/src/post.iced",
                  funcname: "PostMessageClient.post"
                });
                _this.post_rest(esc(__iced_deferrals.defer({
                  lineno: 31
                })));
                __iced_deferrals._fulfill();
              })(function() {
                log.debug("- PostMessageClient::authenticate");
                return cb(null, _this.km);
              });
            });
          });
        };
      })(this));
    };

    return PostMessageClient;

  })(Base);

}).call(this);
