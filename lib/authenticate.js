// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var AuthenticateClient, Base, C, Config, KeyManager, SessionClient, Thread, UserSet, burn, iced, idg, kbmc, log, make_esc, pack, unix_time, __iced_k, __iced_k_noop, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  SessionClient = require('./session').SessionClient;

  make_esc = require('iced-error').make_esc;

  Base = require('./base').Base;

  Config = require('./config').Config;

  _ref = require('./data'), UserSet = _ref.UserSet, Thread = _ref.Thread;

  log = require('iced-logger');

  kbmc = require('keybase-messenger-core');

  idg = kbmc.id.generators;

  C = kbmc["const"];

  _ref1 = require('kbpgp'), burn = _ref1.burn, KeyManager = _ref1.KeyManager;

  unix_time = require('iced-utils').util.unix_time;

  pack = require('purepack').pack;

  exports.AuthenticateClient = AuthenticateClient = (function(_super) {
    __extends(AuthenticateClient, _super);

    function AuthenticateClient(_arg) {
      var cfg;
      cfg = _arg.cfg, this.thread = _arg.thread, this.user = _arg.user;
      AuthenticateClient.__super__.constructor.call(this, {
        cfg: cfg
      });
      this.km = null;
      this.keys = {};
    }

    AuthenticateClient.prototype.authenticate = function(cb) {
      var esc, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      log.debug("+ AuthenticateClient::authenticate");
      esc = make_esc(cb, "AuthenticateClient::authenticate");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.authenticate"
          });
          _this.init(esc(__iced_deferrals.defer({
            lineno: 30
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
              funcname: "AuthenticateClient.authenticate"
            });
            _this.generate(esc(__iced_deferrals.defer({
              lineno: 31
            })));
            __iced_deferrals._fulfill();
          })(function() {
            (function(__iced_k) {
              __iced_deferrals = new iced.Deferrals(__iced_k, {
                parent: ___iced_passed_deferral,
                filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
                funcname: "AuthenticateClient.authenticate"
              });
              _this.sign(esc(__iced_deferrals.defer({
                lineno: 32
              })));
              __iced_deferrals._fulfill();
            })(function() {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
                  funcname: "AuthenticateClient.authenticate"
                });
                _this.encrypt(__iced_deferrals.defer({
                  lineno: 33
                }));
                __iced_deferrals._fulfill();
              })(function() {
                (function(__iced_k) {
                  __iced_deferrals = new iced.Deferrals(__iced_k, {
                    parent: ___iced_passed_deferral,
                    filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
                    funcname: "AuthenticateClient.authenticate"
                  });
                  _this.send(esc(__iced_deferrals.defer({
                    lineno: 34
                  })));
                  __iced_deferrals._fulfill();
                })(function() {
                  log.debug("- AuthenticateClient::authenticate");
                  return cb(null, _this.km);
                });
              });
            });
          });
        };
      })(this));
    };

    AuthenticateClient.prototype.init = function(cb) {
      var err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.init"
          });
          _this.user.get_private_keys(__iced_deferrals.defer({
            assign_fn: (function(__slot_1) {
              return function() {
                err = arguments[0];
                return __slot_1.privkeys = arguments[1];
              };
            })(_this),
            lineno: 41
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          return cb(err);
        };
      })(this));
    };

    AuthenticateClient.prototype.sign = function(cb) {
      var err, msg, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      log.debug("+ sign");
      msg = this.cfg.encode_to_buffer({
        version: C.protocol.version.V1,
        i: this.thread.i,
        fingerprint: this.km.get_pgp_fingerprint(),
        expires: unix_time() + this.expire_in
      });
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.sign"
          });
          burn({
            msg: msg,
            signing_key: _this.privkeys.signing
          }, __iced_deferrals.defer({
            assign_fn: (function(__slot_1) {
              return function() {
                err = arguments[0];
                return __slot_1.sig = arguments[1];
              };
            })(_this),
            lineno: 54
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          log.debug("- sign");
          return cb(err);
        };
      })(this));
    };

    AuthenticateClient.prototype.encrypt = function(cb) {
      var esc, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "AuthorizeClient::encrypt");
      log.debug("+ encrypt");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.encrypt"
          });
          _this.encrypt_priv(esc(__iced_deferrals.defer({
            lineno: 63
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
              funcname: "AuthenticateClient.encrypt"
            });
            _this.encrypt_pub(esc(__iced_deferrals.defer({
              lineno: 64
            })));
            __iced_deferrals._fulfill();
          })(function() {
            log.debug("- encrypt");
            return cb(null);
          });
        };
      })(this));
    };

    AuthenticateClient.prototype.encrypt_pub = function(cb) {
      var buf, esc, key, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "AuthorizeClient::encrypt_pub");
      log.debug("+ encrypt_pub");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.encrypt_pub"
          });
          _this.km.export_pgp_public({}, esc(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return key = arguments[0];
              };
            })(),
            lineno: 75
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          buf = _this.cfg.encode_to_buffer({
            key: key,
            sig: _this.sig
          });
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
              funcname: "AuthenticateClient.encrypt_pub"
            });
            _this.thread.get_cipher().encrypt(buf, __iced_deferrals.defer({
              assign_fn: (function(__slot_1) {
                return function() {
                  return __slot_1["public"] = arguments[0];
                };
              })(_this.keys),
              lineno: 77
            }));
            __iced_deferrals._fulfill();
          })(function() {
            log.debug("- encrypt_pub");
            return cb(null);
          });
        };
      })(this));
    };

    AuthenticateClient.prototype.encrypt_priv = function(cb) {
      var args, esc, tmpkey, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "AuthorizeClient::encrypt_priv");
      log.debug("+ encrypt_priv");
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.encrypt_priv"
          });
          _this.km.export_pgp_private_to_client({}, esc(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return tmpkey = arguments[0];
              };
            })(),
            lineno: 88
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          args = {
            msg: tmpkey,
            encryption_key: _this.privkeys.crypt,
            signing_key: _this.privkeys.signing,
            opts: {
              hide: true
            }
          };
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
              funcname: "AuthenticateClient.encrypt_priv"
            });
            burn(args, esc(__iced_deferrals.defer({
              assign_fn: (function(__slot_1) {
                return function() {
                  return __slot_1["private"] = arguments[0];
                };
              })(_this.keys),
              lineno: 94
            })));
            __iced_deferrals._fulfill();
          })(function() {
            log.debug("- encrypt_priv");
            return cb(null);
          });
        };
      })(this));
    };

    AuthenticateClient.prototype.generate = function(cb) {
      var args, esc, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      esc = make_esc(cb, "AuthorizeClient::generate_session_auth_key");
      log.debug("+ generate");
      this.expire_in = this.cfg.session_auth_key_lifespan();
      args = {
        userid: new Buffer("" + (this.thread.i.toString('hex')) + "." + this.user.zid),
        nbits: this.cfg.session_auth_key_bits(),
        nsubs: 0,
        expire_in: {
          primary: this.expire_in
        }
      };
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.generate"
          });
          KeyManager.generate(args, esc(__iced_deferrals.defer({
            assign_fn: (function(__slot_1) {
              return function() {
                return __slot_1.km = arguments[0];
              };
            })(_this),
            lineno: 109
          })));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
              funcname: "AuthenticateClient.generate"
            });
            _this.km.sign({}, esc(__iced_deferrals.defer({
              lineno: 110
            })));
            __iced_deferrals._fulfill();
          })(function() {
            log.debug("- generate");
            return cb(null);
          });
        };
      })(this));
    };

    AuthenticateClient.prototype.send = function(cb) {
      var arg, err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      log.debug("+ send");
      arg = {
        endpoint: "thread/authorize",
        method: "POST",
        data: {
          i: this.thread.i,
          user_zid: this.user.zid,
          token: this.user.t,
          keys: this.keys,
          sig: this.sig
        }
      };
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/messenger-client/src/authenticate.iced",
            funcname: "AuthenticateClient.send"
          });
          _this.request(arg, __iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                return err = arguments[0];
              };
            })(),
            lineno: 129
          }));
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          log.debug("- send");
          return cb(err);
        };
      })(this));
    };

    return AuthenticateClient;

  })(Base);

}).call(this);
